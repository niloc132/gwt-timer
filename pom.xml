<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.gwtproject.timer</groupId>
  <artifactId>gwt-timer</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>
<!--  <packaging>gwt-lib</packaging>-->

  <name>GWT Timer</name>
  <description>A simplified, browser-safe timer class. This class serves the same purpose as java.util.Timer, but is simplified because of the single-threaded
    environment.
    To schedule a timer, simply create a subclass of it (overriding run) and call schedule or scheduleRepeating.</description>
  <url>https://github.com/gwtproject/gwt-timer</url>
  <organization>
    <name>The GWT Authors</name>
    <url>https://github.com/gwtproject</url>
  </organization>
  <inceptionYear>2019</inceptionYear>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>The GWT Authors</name>
      <organization>The GWT Project Authors</organization>
      <url>https://github.com/gwtproject</url>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:git://github.com/gwtproject/gwt-timer.git</connection>
    <developerConnection>scm:git:ssh://github.com/gwtproject/gwt-timer.git</developerConnection>
    <url>https://github.com/gwtproject/gwt-timer/tree/master</url>
  </scm>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.build.outputEncoding>UTF-8</project.build.outputEncoding>

    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>

    <maven.clean.plugin>3.1.0</maven.clean.plugin>
    <maven.compiler.plugin>3.6.1</maven.compiler.plugin>
    <maven.fmt.plugin>2.5.1</maven.fmt.plugin>
    <maven.gpg.plugin>1.6</maven.gpg.plugin>
    <maven.gwt.plugin>1.0-rc-10</maven.gwt.plugin>
    <maven.javadoc.plugin>3.1.1</maven.javadoc.plugin>
    <maven.licence.plugin>3.0</maven.licence.plugin>
    <maven.source.plugin>3.1.0</maven.source.plugin>
    <maven.surefire.plugin>2.22.2</maven.surefire.plugin>

    <elemental.version>2.26</elemental.version>
    <gwt.version>2.8.2</gwt.version>
    <junit.version>4.12</junit.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.realityforge.com.google.elemental2</groupId>
      <artifactId>elemental2-dom</artifactId>
      <version>${elemental.version}</version>
    </dependency>
    <dependency>
      <groupId>org.realityforge.com.google.elemental2</groupId>
      <artifactId>elemental2-dom</artifactId>
      <version>${elemental.version}</version>
      <classifier>sources</classifier>
    </dependency>

    <!-- for test only -->
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-user</artifactId>
      <version>${gwt.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-dev</artifactId>
      <version>${gwt.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/java</directory>
      </resource>
       <resource>
        <directory>src/main/resources</directory>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>${project.basedir}/src/test/java</directory>
      </testResource>
      <testResource>
        <directory>${project.basedir}/src/test/resources</directory>
      </testResource>
    </testResources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven.compiler.plugin}</version>
        <configuration>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
        </configuration>
        <executions>
          <execution>
            <id>default-compile</id>
            <goals>
              <goal>compile</goal>
            </goals>
            <configuration>
              <showWarnings>true</showWarnings>
              <compilerArgument>-proc:none</compilerArgument>
            </configuration>
          </execution>
          <execution>
            <id>default-testCompile</id>
            <goals>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven.surefire.plugin}</version>
        <configuration>
          <additionalClasspathElements>
            <additionalClasspathElement>${project.build.sourceDirectory}</additionalClasspathElement>
            <additionalClasspathElement>${project.build.testSourceDirectory}</additionalClasspathElement>
            <additionalClasspathElement>${project.build.directory}/generated-test-sources/test-annotations
            </additionalClasspathElement>
          </additionalClasspathElements>
          <useManifestOnlyJar>false</useManifestOnlyJar>
          <reuseForks>false</reuseForks>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.coveo</groupId>
        <artifactId>fmt-maven-plugin</artifactId>
        <version>${maven.fmt.plugin}</version>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <version>${maven.clean.plugin}</version>
        <configuration>
          <filesets>
            <fileset>
              <directory>${basedir}</directory>
              <includes>
                <include>gwt-unitCache/</include>
                <include>war/</include>
              </includes>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.mycila</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <version>${maven.licence.plugin}</version>
        <configuration>
          <header>LICENSE.header</header>
          <encoding>UTF-8</encoding>
          <skipExistingHeaders>true</skipExistingHeaders>
          <mapping>
            <java>SLASHSTAR_STYLE</java>
          </mapping>
          <excludes>
            <exclude>**/README.md</exclude>
            <exclude>**/LICENSE</exclude>
            <exclude>**/LICENSE.header</exclude>
            <exclude>**/AUTHORS</exclude>
            <exclude>**/*.xml</exclude>
            <exclude>src/test/resources/**</exclude>
            <exclude>src/main/resources/**</exclude>
            <exclude>gwt-unitCache/**</exclude>
            <exclude>target/**</exclude>
            <exclude>war/**</exclude>
          </excludes>
          <properties>
            <year>${project.inceptionYear}</year>
            <name>${project.organization.name}</name>
          </properties>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <distributionManagement>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
    <repository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
  </distributionManagement>

  <profiles>
    <!-- release profile to create sources, javadoc, and sign all artifacts before uploading -->
    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>${maven.source.plugin}</version>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>${maven.javadoc.plugin}</version>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <!-- see http://central.sonatype.org/pages/working-with-pgp-signatures.html for more detail -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>${maven.gpg.plugin}</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
